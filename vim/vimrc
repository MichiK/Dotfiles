" Better safe than sorry, disable compatability mode once and for all here.
set nocompatible

" Allow us to have unsaved changes in one file and open another one in the
" same vim instance.
set hidden

" Ask for confirmation instead of simply denying anything, e.g. when closing
" with unsaved changes.
set confirm

" We want syntax highlighting and we have a dark background.
syntax on
set background=dark

" On Debian, vim by default uses its own mouse handling, which is strange and
" unintuitive as it is different from the application in the other terminaö
" next to it. Leave all the mouse stuff to the terminal emulator instead.
set mouse=

" Enable line numbers but make them unobstrusive. This may cause problems with
" copying from the terminal emulator, so see the paste mode shortcut below.
set number
highlight LineNr ctermfg=DarkGrey

" Automatic intendentation of the next line when we press enter on a line that
" is already intended. Beware of this for pasting, so see the paste mode
" shortcut below.
set autoindent

" In addition to autoindent, we want this to stay within the comment mode
" if return is pressed in a source code comment. Does not work all the times,
" but more often than not.
set formatoptions=cqrt

" Allow switching to/from paste mode by pressing F12. This defuses autointen
" and removes the line numbers so copy & paste is easy.
nmap <silent> <F12> :set paste! number!<CR>

" Pimp up the search: incsearch finds all results as you type, hlsearch
" highlights all these results in real-time. ignorecase makes search
" caase-insensitive, which is what we want most of the times, so we make
" it the default.
set incsearch hlsearch ignorecase

" This enables visual tab completion of the menu, similar to zsh etc. Just
" enter the begin of a command and tab through all the options available
" (and see them coming).
set wildmenu

" Sometimes, automatic line breaks are desireable. Most of the time, they are
" more annoying than they help, so this is only here for reference should we
" need it at one point.
"set textwidth=105

" This allows the cursor in normal mode over line breaks. In addition,
" backspace jumps over linebreaks as well.
set whichwrap=<,>,h,l

" Instead of wrapping hard at the edge of the terminal window, this wraps at
" the last word that completely fits into the window and marks the continuation
" line. This is merely a matter of taste and can be useful.
"set wrap linebreak showbreak=\ --\>\ 

" Show tabs, trailing spaces and non-breaking spaces. This helps finding minor
" layout glitches but can be annoying.
set list listchars=tab:»·,trail:·,nbsp:+

" When moving the cursor up or down to the edge of the window, start scrolling
" in advance a few lines so that a bit of context is shown and the cursor
" always keeps a distance to the edge.
set scrolloff=5

" When typing fast, the shift key needed to type a colon on the german keyboard
" might stick a bit too long, so here we have an alias for the most-often used
" commands to catch this error gracefully and do what was intended originally.
cabbrev Wq wq
cabbrev W w
cabbrev Q q

" Handle *.less files as CSS with regard to syntax highlighting.
autocmd BufNewFile,BufRead *.less set filetype=css

" Tabs vs. spaces is a neverending debate. I like spaces and I like to converve
" characters to keep liens short, so this is what I want as a sane default.
" YAML is a bit different, but apart from that, tabs should be spaces and four
" are more than enough to get the level right (often even two suffice).
autocmd Filetype css setlocal ts=4 sw=4 expandtab
autocmd Filetype javascript setlocal ts=4 sw=4 expandtab
autocmd Filetype html setlocal ts=4 sw=4 expandtab
autocmd Filetype python setlocal ts=4 sw=4 expandtab
autocmd Filetype yaml setlocal ts=2 sw=2 expandtab cursorcolumn

" vim: set ts=2 sw=2 expandtab syntax=vim:
